{"ast":null,"code":"var _jsxFileName = \"/Users/sani/Desktop/emt-lab-nova/frontend/src/components/Books/BookEdit/BookEdit.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookEdit = props => {\n  _s();\n  const navigate = useHistory();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: \"NOVEL\",\n    author: 0,\n    availableCopies: 0\n  });\n  const handleChange = e => {\n    updateFormData({\n      ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const name = formData.name !== \"\" ? formData.name : props.book.name;\n    const category = formData.category !== 0 ? formData.category : props.book.category;\n    const author = formData.author !== 0 ? formData.author : props.book.author.id;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n    props.onEditBook(props.book.id, name, category, author, availableCopies);\n    navigate.push(\"/books\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              name: \"name\",\n              placeholder: props.book.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"availableCopies\",\n              children: \"Available Copies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"availableCopies\",\n              name: \"availableCopies\",\n              placeholder: props.book.availableCopies,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"category\",\n              className: \"form-control\",\n              onChange: handleChange,\n              children: props.categories.map(term => {\n                if (props.book.category !== undefined && props.book.category === term) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: props.book.category,\n                  value: term,\n                  children: term\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: term,\n                  children: term\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"author\",\n              className: \"form-control\",\n              onChange: handleChange,\n              children: props.authors.map(term => {\n                if (props.book.author !== undefined && props.book.author.id === term.id) return /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: props.book.author.id,\n                  value: term.id,\n                  children: term.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 45\n                }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: term.id,\n                  children: term.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit\",\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(BookEdit, \"rugVVhqIcpz7aVlmlTl2U0a6WV8=\", false, function () {\n  return [useHistory];\n});\n_c = BookEdit;\nexport default BookEdit;\nvar _c;\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"names":["React","useHistory","jsxDEV","_jsxDEV","BookEdit","props","_s","navigate","formData","updateFormData","useState","name","category","author","availableCopies","handleChange","e","target","value","trim","onFormSubmit","preventDefault","book","id","onEditBook","push","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","categories","map","term","undefined","selected","authors","_c","$RefreshReg$"],"sources":["/Users/sani/Desktop/emt-lab-nova/frontend/src/components/Books/BookEdit/BookEdit.js"],"sourcesContent":["import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nconst BookEdit = (props) => {\n    const navigate = useHistory();\n\n    const [formData, updateFormData] = React.useState({\n        name: \"\",\n        category: \"NOVEL\",\n        author: 0,\n        availableCopies: 0,\n    });\n\n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        const name = formData.name !== \"\" ? formData.name : props.book.name;\n        const category = formData.category !== 0 ? formData.category : props.book.category;\n        const author = formData.author !== 0 ? formData.author : props.book.author.id;\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n\n        props.onEditBook(props.book.id, name, category, author, availableCopies);\n        navigate.push(\"/books\");\n    };\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row mt-5\">\n                <div className=\"col-md-5\">\n                    <form onSubmit={onFormSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"name\"\n                                name=\"name\"\n                                placeholder={props.book.name}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"availableCopies\">Available Copies</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"availableCopies\"\n                                name=\"availableCopies\"\n                                placeholder={props.book.availableCopies}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Category</label>\n                            <select\n                                name=\"category\"\n                                className=\"form-control\"\n                                onChange={handleChange}\n                            >\n                                {props.categories.map((term) => {\n                                    if (\n                                        props.book.category !== undefined &&\n                                        props.book.category === term\n                                    )\n                                        return (\n                                            <option\n                                                selected={props.book.category}\n                                                value={term}\n                                            >\n                                                {term}\n                                            </option>\n                                        );\n                                    else\n                                        return (\n                                            <option value={term}>\n                                                {term}\n                                            </option>\n                                        );\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Author</label>\n                            <select\n                                name=\"author\"\n                                className=\"form-control\"\n                                onChange={handleChange}\n                            >\n                                {props.authors.map((term) => {\n                                    if (\n                                        props.book.author !== undefined &&\n                                        props.book.author.id === term.id\n                                    )\n                                        return (\n                                            <option\n                                                selected={props.book.author.id}\n                                                value={term.id}\n                                            >\n                                                {term.name}\n                                            </option>\n                                        );\n                                    else\n                                        return (\n                                            <option value={term.id}>\n                                                {term.name}\n                                            </option>\n                                        );\n                                })}\n                            </select>\n                        </div>\n                        <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default BookEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module"}